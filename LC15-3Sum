class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        Arrays.sort(nums);
        for(int i = 0; i<nums.length-2; i++){
            if(i>0 && nums[i] == nums[i-1]){    // skip duplicate for i index
                continue;
            }
            int j = i + 1;
            int k = nums.length-1;
            while(j<k){                          // fixed i index and perform two pointer on j and k index.
                int sum = nums[i] + nums[j] + nums[k];
                if(sum == 0){
                    result.add(Arrays.asList(nums[i],nums[j],nums[k]));   // if sum of i,j,k=0 then store it inside a list
                    while(j<k && nums[j] == nums[j+1]){                  // skip duplicate for j index
                        j++;
                    }
                    while(j<k && nums[k] == nums[k-1]){                 // skip duplicate for k index
                        k--;
                    }
                    j++;
                    k--;
                }
                else if(sum >0){
                    k--;
                }
                else {
                    j++;
                } 
            }
        }
       return result; 
    }
}

/** [-1,0,1,2,-1,-4]
[-4,-1,-1,0,1,2]

-4, -1, 2 = -3 < 0 
-4, 0, 2 = -2 <0 
-4, 1, 2 = -1 <0

-1, -1, 2 = 0 // j++ & k--
-1, 0, 1 = 0 // j++ & k-- {stop because j overlap k}

-1, 0, 2 = 1 > 0 // k-- 
-1, 0, 1 = 0 // duplicate

0, 1, 2 = 3 > 0 // k--
stop {overlap}
*/
